# Generated by Django 3.2 on 2021-04-12 11:57

from django.conf import settings
import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import products.models
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tags', '0002_alter_tag_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(default=1, null=True, unique=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('name_product', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('product_type', models.CharField(choices=[('E', 'Ebook'), ('A', 'Audio'), ('P', 'Physical')], default='E', max_length=8)),
                ('description', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Benefits')),
                ('price', models.DecimalField(decimal_places=2, default=99.99, max_digits=9, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price (EUR)')),
                ('img', models.ImageField(blank=True, null=True, upload_to=products.models.product_img_path, verbose_name='Image')),
                ('is_digital', models.BooleanField(default=False, verbose_name='Digital (in stock, no shipment)')),
                ('quantity', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('in_stock', models.BooleanField(default=False, verbose_name='In Stock')),
                ('active', models.BooleanField(default=True, verbose_name='Show')),
                ('recommend', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product', to='products.category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_creator', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(to='tags.Tag')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='ProductFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/home/mgb/c/static_cdn/protected_root'), upload_to=products.models.upload_product_file_loc)),
                ('free', models.BooleanField(default=False)),
                ('user_required', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
    ]
